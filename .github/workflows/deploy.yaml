name: Injective list - Deploy UI

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.commits[0].message, 'generate json files') && !contains(github.event.commits[0].message, 'skip deploy') }}
    name: "Trigger deployments"
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      ## Github Actions
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      SKIP_DEPLOYMENTS: ${{ secrets.SKIP_DEPLOYMENTS }}

    steps:
      - name: Sleep for 60s
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: juliangruber/sleep-action@v2.0.0
        with:
          time: 60s

      - name: Deploy mito (devnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: devnet.yml
          ref: dev
          repo: mitoFinance/mito-ui
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy mito
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: mitoFinance/mito-ui
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy bridge (devnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: devnet.yml
          ref: dev
          repo: injectiveLabs/injective-bridge
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy bridge (mainnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: injectiveLabs/injective-bridge
          token: "${{ secrets.GH_TOKEN }}"

      - name: Rebuild helix (devnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: devnet.yml
          ref: dev
          repo: injectiveLabs/injective-helix
          token: "${{ secrets.GH_TOKEN }}"

      - name: Rebuild helix
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: injectiveLabs/injective-helix
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy explorer (devnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: devnet.yml
          ref: dev
          repo: injectiveLabs/injective-explorer
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy explorer
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yaml
          ref: master
          repo: injectiveLabs/injective-explorer
          token: "${{ secrets.GH_TOKEN }}"

      - name: Rebuild hub (devnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: devnet.yml
          ref: dev
          repo: injectiveLabs/injective-hub
          token: "${{ secrets.GH_TOKEN }}"

      - name: Rebuild Hub
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: injectiveLabs/injective-hub
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy OLP (mainnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: injectiveLabs/injective-dmm-v2
          token: "${{ secrets.GH_TOKEN }}"

      - name: Deploy Admin UI (mainnet)
        if: ${{ env.SKIP_DEPLOYMENTS != 'true' }}
        uses: benc-uk/workflow-dispatch@v1.2.2
        with:
          workflow: mainnet.yml
          ref: master
          repo: injectiveLabs/injective-admin-ui
          token: "${{ secrets.GH_TOKEN }}"
